name: Deploy_lambda_function
on:
  workflow_dispatch:
   inputs:
     TOKEN:
       type: 'choice'
       description: 'Choose the TOKEN'
       options:
         - 'dev'
         - 'postman'
     TESTING:
       type: boolean
       description: 'Do you want to test a lambda functon code?'
       default: true


env:
  APPSYNC_DEV_URL: 'https://ry4dsee7fbgrvmkw67vybrra3i.appsync-api.us-east-1.amazonaws.com/graphql'
  APPSYNC_PROD_URL: 'https://dh3onmef7bhrhkyvw7uqeoczh4.appsync-api.us-east-1.amazonaws.com/graphql'

jobs:
  deploy:
    name: Upload lambda code
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: run testing script
        run: |
          pip3 install requests
          if [ ${{ inputs.TOKEN }} == 'dev' ]
          then
            python ./testing/testing.py ${{ secrets.DEV_TOKEN }} ${{ inputs.APPSYNC_DEV_URL }}
          elif [ ${{ inputs.TOKEN }} == 'postman' ]
          then
            python ./testing/testing.py ${{ secrets.POSTMAN_TOKEN }} ${{ inputs.APPSYNC_PROD_URL }}
          fi
          echo "ROLLBACK_HASH=$(git log -2 --format=format:'%H' | tail -1)" >> $GITHUB_ENV
          cat $GITHUB_ENV
          echo ${{ env.ROLLBACK }}

      - name: check rollback
        if: env.ROLLBACK == 'True' && inputs.TESTING
        uses: actions/checkout@v3
        with:
          ref: ${{ ENV.ROLLBACK_HASH }}

      - name: show rollback hash
        run: |
          git log -2
