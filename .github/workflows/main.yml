name: testing
on:
#  schedule:
#    - cron: '0 * * * *' # every hour on the hour
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        type: 'choice'
        description: 'Choose the environment'
        options:
          - 'production'
          - 'develop'


env:
  APPSYNC_DEV_URL: 'https://ry4dsee7fbgrvmkw67vybrra3i.appsync-api.us-east-1.amazonaws.com/graphql'
  APPSYNC_PROD_URL: 'https://dh3onmef7bhrhkyvw7uqeoczh4.appsync-api.us-east-1.amazonaws.com/graphql'
  PRODUCTION_TOKEN: ${{ secrets.PRODUCTION_TOKEN }}
  DEV_TOKEN: ${{ secrets.DEV_TOKEN }}

jobs:
  deploy:
    name: testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: run testing script
        run: |
          pip3 install -r ./testing/requirements.txt
          if [ ${{ inputs.ENVIRONMENT }} == 'develop' ]
          then
            export ACCEESS_TOKEN=${{ secrets.DEV_TOKEN }}
            export URI=${{ env.APPSYNC_DEV_URL }}
            echo "This is develop!"
          elif [ ${{ inputs.ENVIRONMENT }} == 'production' ]
          then
            export ACCEESS_TOKEN=${{ secrets.PRODUCTION_TOKEN }}
            export URI=${{ env.APPSYNC_PROD_URL }}
            echo "This is production!"            
          fi
          #python3 -m pytest testing/apis_sanity_test.py


      - name: Show variables
        if: always()
        run: |
          echo "Environment: ${{ inputs.ENVIRONMENT }}"
          echo "GitHub's branch: ${{ github.ref_name }}"
